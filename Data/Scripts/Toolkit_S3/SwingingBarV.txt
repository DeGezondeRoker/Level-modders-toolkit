// ----------------------------------
// RSDK Project: Sonic 1 / 2
// Script Description: Swinging Bar Vertical
// Script Author: De Gezonde Roker
// ----------------------------------

// ========================
// Aliases
// ========================

private alias object.value2 : object.hangingPlayers

private alias object.xpos : player.xpos
private alias object.ypos : player.ypos
private alias object.speed : player.speed
private alias object.xvel : player.xvel
private alias object.yvel : player.yvel
private alias object.state : player.state
private alias object.animation : player.animation
private alias object.prevAnimation : player.prevAnimation
private alias object.animationSpeed : player.animationSpeed
private alias object.animationTimer : player.animationTimer
private alias object.direction : player.direction
private alias object.frame : player.frame
private alias object.left : player.left
private alias object.right : player.right
private alias object.gravity : player.gravity
private alias object.value1  : player.timer
private alias object.jumpPress 	: player.jumpPress
private alias object.rotation 	: player.rotation


public value ANI_POLE_SWING_H = 0

// ========================
// Tables
// ========================

public table SwingingBar_PlayerTimers_V
	0,	0,	0,	0
end table

public table SwingingBar_PlayerDirections_V
	0,	0,	0,	0
end table

// ========================
// Events
// ========================

event ObjectUpdate
	foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
		GetTableValue(temp0, currentPlayer, SwingingBar_PlayerTimers_V)
		if temp0 != 0
			GetBit(temp2, object.hangingPlayers, currentPlayer)
			if temp2 == true
				GetTableValue(temp0, currentPlayer, SwingingBar_PlayerTimers_V)
				if temp0 >= 30
					player[currentPlayer].state = Player_State_Air
					player[currentPlayer].xvel = -0x100000
					
					GetTableValue(temp0, currentPlayer, SwingingBar_PlayerDirections_V)
					player[currentPlayer].xvel *= temp0
					
					player[currentPlayer].speed = player[currentPlayer].xvel
					
					player[currentPlayer].timer = 0
					player[currentPlayer].gravity = GRAVITY_AIR
					player[currentPlayer].animation = ANI_RUNNING
					player[currentPlayer].rotation = 0
					SetTableValue(0, currentPlayer, SwingingBar_PlayerTimers_V)
				else
					temp0++
					SetTableValue(temp0, currentPlayer, SwingingBar_PlayerTimers_V)
					
					player[currentPlayer].state = Player_State_Static
					player[currentPlayer].xvel = 0
					player[currentPlayer].speed = 0
					player[currentPlayer].yvel = 0
					player[currentPlayer].ypos = object.ypos
					player[currentPlayer].ypos += 0xC0000
					
					if player[currentPlayer].jumpPress == true
						player[currentPlayer].state = Player_State_Air
						player[currentPlayer].yvel = -0x50000
						player[currentPlayer].timer = 0
						player[currentPlayer].gravity = GRAVITY_AIR
						player[currentPlayer].animation = ANI_JUMPING
						SetTableValue(0, currentPlayer, SwingingBar_PlayerTimers_V)
					end if
				end if
			end if
		else
			BoxCollisionTest(C_TOUCH, object.entityPos, -20, -4, 20, 4, currentPlayer, C_BOX, C_BOX, C_BOX, C_BOX)
			if checkResult == true
				GetBit(temp2, object.hangingPlayers, currentPlayer)
				if temp2 == false
					checkEqual(player[currentPlayer].state, Player_State_Ground)
					temp0 = checkResult
					checkEqual(player[currentPlayer].state, Player_State_Roll)
					temp0 |= checkResult
					if temp0 == true
						SetBit(object.hangingPlayers, currentPlayer, true)
						
						temp0 = player[currentPlayer].xvel
						Abs(temp0)
						if temp0 <= 0x40000
							// Do  nothing
						else
							player[currentPlayer].state = Player_State_Static
							
							SetTableValue(1, currentPlayer, SwingingBar_PlayerTimers_V)
							if player[currentPlayer].xvel < 0
								SetTableValue(1, currentPlayer, SwingingBar_PlayerDirections_V)
								player[currentPlayer].animation = ANI_POLE_SWING
								player[currentPlayer].prevAnimation = ANI_POLE_SWING
								player[currentPlayer].frame = 16
								player[currentPlayer].animationTimer = 0
								player[currentPlayer].animationSpeed = 255
							else
								SetTableValue(-1, currentPlayer, SwingingBar_PlayerDirections_V)
								player[currentPlayer].animation = ANI_POLE_SWING
								player[currentPlayer].prevAnimation = ANI_POLE_SWING
								player[currentPlayer].frame = 0
								player[currentPlayer].animationTimer = 0
								player[currentPlayer].animationSpeed = 255
							end if
							
							PlaySfx(SfxName[Catch], false)
							player[currentPlayer].xvel = 0
							player[currentPlayer].speed = 0
							player[currentPlayer].yvel = 0
							player[currentPlayer].xpos = object.xpos
							player[currentPlayer].ypos = object.ypos
							player[currentPlayer].ypos += 0xC0000
						end if
					end if
				end if
			else
				SetBit(object.hangingPlayers, currentPlayer, false)
				BoxCollisionTest(C_PLATFORM, object.entityPos, -4, -32, 4, -24, currentPlayer, C_BOX, C_BOX, C_BOX, C_BOX)
			end if
		end if
	next
end event


event ObjectDraw
	DrawSprite(0)
end event


event ObjectStartup
	LoadSpriteSheet("Toolkit/Objects.gif")
	SpriteFrame(-4, -32, 8, 64, 66, 191)	
end event
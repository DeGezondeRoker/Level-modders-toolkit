// ----------------------------------
// RSDK Project: Sonic 1 / 2
// Script Description: Break Block Object
// Script Author: De Gezonde Roker
// ----------------------------------

// ========================
// Aliases
// ========================

private alias object.value0 : object.prevXpos
private alias object.value1 : object.prevYpos
private alias object.value2 : object.stoodPlayers
private alias object.value3 : object.collidingPlayers
private alias object.value4 : object.killPlayers

private alias object.ixpos : player.ixpos
private alias object.xpos : player.xpos
private alias object.ypos : player.ypos
private alias object.yvel : player.yvel
private alias object.animation : player.animation
private alias object.gravity : player.gravity

private alias object.value46 : temp8
private alias object.value47 : temp9

private alias 0 : BREAK_BLOCK_BLOCK
private alias 1 : BREAK_BLOCK_TILE

// ========================
// Tables
// ========================

// These values are straight from 3K disasm (CNZ Blocks)
private table LargeBreakBlock_XSpeed
	-0x40000, -0x3C000, -0x38000, -0x34000, -0x20000, -0x1C000, -0x18000, -0x14000, 0x20000, 0x1C000, 0x18000, 0x14000, 0x40000, 0x3C000, 0x38000, 0x34000
end table

private table LargeBreakBlock_YSpeed
	-0x40000, -0x3C000, -0x38000, -0x34000, -0x40000, -0x3C000, -0x38000, -0x34000, -0x40000, -0x3C000, -0x38000, -0x34000, -0x40000, -0x3C000, -0x38000, -0x34000
end table

// ========================
// Events
// ========================

event ObjectUpdate
	switch object.state
	case BREAK_BLOCK_BLOCK
		temp7 = object.prevXpos
		temp7 &= 0xFFFF0000
		temp5 = object.xpos
		temp5 &= 0xFFFF0000
		temp5 -= temp7
		
		temp7 = object.prevYpos
		temp7 &= 0xFFFF0000
		temp6 = object.ypos
		temp6 &= 0xFFFF0000
		temp6 -= temp7
		
		foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
			GetBit(temp2, object.stoodPlayers, currentPlayer)
			if temp2 == true
				player[currentPlayer].xpos += temp5
				player[currentPlayer].ypos += temp6
			end if
			
			GetBit(temp2, object.collidingPlayers, currentPlayer)
			if temp2 == true
				if object.propertyValue == 1
					BoxCollisionTest(C_TOUCH, object.entityPos, -30, -30, 30, 30, currentPlayer, C_BOX, C_BOX, C_BOX, C_BOX)
				else
					BoxCollisionTest(C_TOUCH, object.entityPos, -14, -14, 14, 14, currentPlayer, C_BOX, C_BOX, C_BOX, C_BOX)
				end if
				if checkResult == true
					GetBit(temp2, object.killPlayers, currentPlayer)
					if temp2 == true
						CallFunction(Player_Kill)						// The player has been inside of the block for two frames, so kill them
					end if
					SetBit(object.killPlayers, currentPlayer, true)		// The player is inside of the block. If they still are on the next frame, kill them
				else
					SetBit(object.killPlayers, currentPlayer, false)
				end if
			end if
			
			SetBit(object.collidingPlayers, currentPlayer, false)
			SetBit(object.stoodPlayers, currentPlayer, false)
			
			if object.propertyValue == 1
				BoxCollisionTest(C_SOLID, object.entityPos, -32, -32, 32, 32, currentPlayer, C_BOX, C_BOX, C_BOX, C_BOX)
			else
				BoxCollisionTest(C_SOLID, object.entityPos, -16, -16, 16, 16, currentPlayer, C_BOX, C_BOX, C_BOX, C_BOX)
			end if
			if checkResult != false
				SetBit(object.collidingPlayers, currentPlayer, true)
			end if
			if checkResult == COL_TOP
				if player[currentPlayer].animation == ANI_JUMPING
					object.type = TypeName[Blank Object]
					player[currentPlayer].yvel = -0x30000
					player[currentPlayer].gravity = GRAVITY_AIR
					if object.propertyValue == 1
						temp7 = 0
						temp5 = 2	// The frame of the spawned tiles
						while temp7 < 16
							CreateTempObject(TypeName[Break Block], 0, object.xpos, object.ypos)
							object[tempObjectPos].frame = temp5
							object[tempObjectPos].state = BREAK_BLOCK_TILE
							GetTableValue(temp2, temp7, LargeBreakBlock_XSpeed)
							object[tempObjectPos].xvel = temp2
							GetTableValue(temp2, temp7, LargeBreakBlock_YSpeed)
							object[tempObjectPos].yvel = temp2
							temp7++
							temp5++
						loop
					else
						// Just spawn these manually..
						temp5 = 7
						temp7 = 5
						CreateTempObject(TypeName[Break Block], 0, object.xpos, object.ypos)
						object[tempObjectPos].frame = temp5
						object[tempObjectPos].state = BREAK_BLOCK_TILE
						GetTableValue(temp2, temp7, LargeBreakBlock_XSpeed)
						object[tempObjectPos].xvel = temp2
						GetTableValue(temp2, temp7, LargeBreakBlock_YSpeed)
						object[tempObjectPos].yvel = temp2
						temp7++
						temp5++
						CreateTempObject(TypeName[Break Block], 0, object.xpos, object.ypos)
						object[tempObjectPos].frame = temp5
						object[tempObjectPos].state = BREAK_BLOCK_TILE
						GetTableValue(temp2, temp7, LargeBreakBlock_XSpeed)
						object[tempObjectPos].xvel = temp2
						GetTableValue(temp2, temp7, LargeBreakBlock_YSpeed)
						object[tempObjectPos].yvel = temp2
						temp7 += 3
						temp5 += 3
						CreateTempObject(TypeName[Break Block], 0, object.xpos, object.ypos)
						object[tempObjectPos].frame = temp5
						object[tempObjectPos].state = BREAK_BLOCK_TILE
						GetTableValue(temp2, temp7, LargeBreakBlock_XSpeed)
						object[tempObjectPos].xvel = temp2
						GetTableValue(temp2, temp7, LargeBreakBlock_YSpeed)
						object[tempObjectPos].yvel = temp2
						temp7++
						temp5++
						CreateTempObject(TypeName[Break Block], 0, object.xpos, object.ypos)
						object[tempObjectPos].frame = temp5
						object[tempObjectPos].state = BREAK_BLOCK_TILE
						GetTableValue(temp2, temp7, LargeBreakBlock_XSpeed)
						object[tempObjectPos].xvel = temp2
						GetTableValue(temp2, temp7, LargeBreakBlock_YSpeed)
						object[tempObjectPos].yvel = temp2
					end if
				else
					SetBit(object.stoodPlayers, currentPlayer, true)
				end if
			end if
			if checkResult == COL_BOTTOM
				GetBit(temp2, object.killPlayers, currentPlayer)
				if temp2 == true
					temp0 = object[currentPlayer].ixpos
					temp0 -= object.ixpos
					temp1 = temp0
					Abs(temp0)
					if object.propertyValue == 1
						if temp0 > 32
							checkResult = true
						end if
					else
						if temp0 > 16
							checkResult = true
						end if
					end if
					if checkResult == true
						player[currentPlayer].ixpos = object.ixpos
						if object.propertyValue == 1
							temp2 = 32
						else
							temp2 = 16
						end if
						temp2 += 10
						player[currentPlayer].ixpos = object.ixpos
						if temp1 > 0
							player[currentPlayer].ixpos += temp2
						else
							player[currentPlayer].ixpos -= temp2
						end if
					end if
				end if
			end if
		next
		
		object.prevXpos = object.xpos
		object.prevYpos = object.ypos
		break
	case BREAK_BLOCK_TILE
		object.drawOrder = 5
		object.xpos += object.xvel
		object.ypos += object.yvel
		object.yvel += 0x1800
		if object.outOfBounds == true
			object.type = TypeName[Blank Object]
		end if
		break
	end switch
end event


event ObjectDraw
	switch object.state
	case BREAK_BLOCK_BLOCK
		DrawSprite(object.propertyValue)
		break
	case BREAK_BLOCK_TILE
		DrawSprite(object.frame)
		break
	end switch
end event


event ObjectStartup
	// Please change the sprites for these, the default ones included here are absolutely hideous
	LoadSpriteSheet("Toolkit/Objects.gif")
	
	temp0 = 34
	temp1 = 68
	temp2 = 64
	temp3 = 64
	
	temp4 = temp2		// Offset horizontal (done automatically)
	temp4 /= -2
	temp5 = temp3		// Offset vertical (done automatically)
	temp5 /= -2
	
	temp7 = 0
	
	SpriteFrame(-16, -16, 32, 32, temp0, temp1)		// Small block
	SpriteFrame(-32, -32, 64, 64, temp0, temp1)		// Large block
	while temp7 < temp2
		temp6 = 0
		temp8 = temp1
		temp9 = temp5
		
		while temp6 < temp3
			SpriteFrame(temp4, temp9, 16, 16, temp0, temp8)
			temp9 += 16
			temp8 += 16
			temp6 += 16
		loop
		
		temp4 += 16
		temp0 += 16
		temp7 += 16
	loop
end event